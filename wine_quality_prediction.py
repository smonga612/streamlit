# -*- coding: utf-8 -*-
"""Wine Quality Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yzGRMhSB69Y_xMuz4gVC1UfdbGTlMPKd
"""

#importing the dependencies

import numpy as np
import pandas as pd
from sklearn.model_selection  import train_test_split
from sklearn.metrics import accuracy_score
import seaborn as sns
from sklearn.svm import SVC
import streamlit as st



#"""Data Collection and Data Processing of White Wine Dataset"""

wine_data=pd.read_csv("winequality-white.csv",header=0)

#wine_data

#wine_data['volatile acidity'].value_counts()

#wine_data.isnull().sum()

#Y=wine_data['quality'].apply( lambda yvalue: 1 if yvalue > 5 else 0)

wine_data.loc[wine_data['quality'] <= 5, 'quality'] = 0

wine_data.loc[wine_data['quality'] > 5, 'quality'] = 1

#wine_data['quality']

#wine_data.describe()

#wine_data.shape

#wine_data['quality'].value_counts()

#wine_data.groupby('quality').mean()

#"""separating data and labels"""

X=wine_data.drop(columns='quality',axis=1)

#st.write(X)

#st.write(X)

Y=wine_data['quality']

#st.write(Y)

#"""Training and Testing Data"""

X_train,X_test,Y_train,Y_test=train_test_split(X.values,Y.values,test_size=0.2,stratify=Y,random_state=7)

#st.write(X_train.shape,Y_train.shape)

classifier=SVC(kernel='linear')

classifier.fit(X_train,Y_train)



#accuracy on training data

#st.write(X_train)

X_train_prediction=classifier.predict(X_train)

#st.write(X_train_prediction)

#st.write(Y_train)

training_data_accuracy=accuracy_score(X_train_prediction, Y_train)

st.write("Accuracy on training data ",training_data_accuracy)

X_test_prediction=classifier.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction, Y_test)

st.write("Accuracy on test data ",test_data_accuracy)
st.title ("Wine Quality Predicition Using Support Vector Machine Algorithm")
with st.form("my_form"):
    fa=st.text_input("Enter the fixed acidity",value=0)
    va=st.text_input("Enter the volatile acidity",value=0)
    ca=st.text_input("Enter the citric acid",value=0)
    rs=st.text_input("Enter the residual sugar",value=0)
    cl=st.text_input("Enter the chlorides ",value=0)
    fsd=st.text_input("Enter the free sulfur dioxide",value=0)
    tsd=st.text_input("Enter the total sulfur dioxide ",value=0)
    des=st.text_input("Enter the density",value=0)
    ph=st.text_input("Enter the pH ",value=0)
    sul=st.text_input("Enter the sulphates",value=0)
    alc=st.text_input("Enter the alcohol ",value=0)
    submit=st.form_submit_button("submit")
    if submit:
        input_data=(fa,va,ca,rs,cl,fsd,tsd,des,ph,sul,alc)
        #st.write("Addition is ",int(x)+int(y))
        input_data_as_numpy_array=np.asarray(input_data)
        input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)
        st.write(input_data_reshaped)
        prediction=classifier.predict(input_data_reshaped)
        if(prediction ==0):
            st.write("Quality is below or equal to 5")
        else:
            st.write("Quality is above 5")


#input_data=(6.2,0.53,0.02,0.9,0.035,6,81,0.99234,3.24,0.35,9.5)

